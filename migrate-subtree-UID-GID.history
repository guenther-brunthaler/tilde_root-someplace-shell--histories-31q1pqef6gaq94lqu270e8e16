# Migrate UIDs and GIDs in current subtree.
# Files "./users" and "./groups" must be copies of old "/etc/passwd" and "/etc/group".
# v2022.6
# Start.
find '(' -nouser -o -nogroup ')' -ls | head
oui=1000 ogi=$oui nui= ngi=$nui # Define old UID/GID. Empty new $nui/$ngi will be calculated as hash IDs.
echo "Name of the user with old UID $oui:"; grep :$oui: users
echo "Name of the group with old GID $ogi:"; grep :$ogi: groups
oun= nun=guest ogn=$oun ngn=$nun # Define new user/group names. Optionally set old username/groupname for renaming.
test -z "$nui" && nui=`uid-gid-derive-from-name $nun`
test -z "$ngi" && ngi=`uid-gid-derive-from-name $ngn`
echo "User's '$nun' new UID=$nui and GID=$ngi."
test "$nui" != "$oui" && echo "Ensure nothing is found:" && find -uid $nui -ls | head
test "$nui" != "$oui" && echo "Some files with the old UID which will be changed:" && find -uid $oui -ls | head
test "$nui" != "$oui" && echo "Now changing old UID $oui into new $nui." && find -uid $oui -exec chown $nui {} +
test "$nui" != "$oui" && echo "Verify some results:" && find -uid $nui -ls | head
test "$ngi" != "$ogi" && echo "Ensure nothing is found:" && find -gid $ngi -ls | head
test "$ngi" != "$ogi" && echo "Some files with the old GID which will be changed:"  && find -gid $ogi -ls | head
test "$ngi" != "$ogi" && echo "Now changing old GID $ogi into new $ngi."  && find -gid $ogi -exec chgrp $ngi {} +
test "$ngi" != "$ogi" && echo "Verify some results:" && find -gid $ngi -ls | head
if test "$oun"; then echo "Change old login name '$oun' into '$nun'."; usermod -l "$nun" "$oun"; fi
set -x
if test "$oun"; then echo "Change old primary group name '$ogn' into '$ngn'."; groupmod -n "$ngn" "$ogn"; fi
if grep "^$ngn:" /etc/group; then echo "Change GID of existing group '$ngn' into $ngi."; groupmod -g $ngi "$ngn"; else echo "Create new users's '$nun' primary group '$ngn' with GID $ngi"; addgroup --gid $ngi "$ngn"; fi
if grep "^$nun:" /etc/passwd; then echo "Change UID of existing user '$nun' into $nui"; usermod -u $nui "$nun"; else echo "Use the following as the password in next command:"; pwgen-with-entropy-harvesting-as-base62; echo "Create new user '$nun' with UID $nui and GID $ngi."; adduser --uid $nui --gid $ngi "$nun"; fi
set +x
# Done.
